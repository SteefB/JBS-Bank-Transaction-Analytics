@using JQChart.Web.Mvc
@using nl.jbs.banktransactions

@model ChartDataSummary


@{
    ViewBag.Title = "Charts";
}

<h2>Charts</h2>

<h4>Spending</h4>

<p>Credit/debit grouped by month</p>

@(Html.JQChart()
                .Chart(Model.MonthlySpending)
                .ID("jqChart1")
                .Width(750)
                .Height(600)
                .Title("Coming in and going out")
                .Series(series =>
                    {
                        series.Line().Title("Going out")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value1).LineWidth(2);
                        series.Line().Title("Coming in")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value2).LineWidth(2);
                        series.Line().Title("Summed")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value3).LineWidth(1)
                                       .Markers(false);
                        series.Line().Title("Total transferred")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value4).LineWidth(1)
                                       .Markers(false);
                    }
                )
                .Render() 
          )

<p>Accumulated credit/debit</p>

@(Html.JQChart()
                .Chart(Model.MonthlySpendingCumulative)
                .ID("jqChart2")
                .Width(750)
                .Height(600)
                .Title("Cumulative spending")
                .Series(series =>
                    {
                        series.Line().Title("Coming in")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value1);
                        series.Line().Title("Going out")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value2);
                    }
                )
                .Render() 
          )

<h4>Funds</h4>

<p>Funding per month</p>

@(Html.JQChart()
                .Chart(Model.MonthlySpending)
                .ID("jqChart3")
                .Width(750)
                .Height(450)
                .Title("Funds")
                .Series(series =>
                    {
                        series.Spline().Title("Transactions")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value3)
                                       .Markers(false)
                                       .LineWidth(2);
                        series.Line().Title("Transactions")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value3);
                        series.Line().Title("Funds")
                                       .XValues(el => el.Label)
                                       .YValues(el => el.Value5);
                    }
                )
                .Render() 
          )

<p>Funding per transaction</p>

@(Html.JQChart()
                .Chart(Model.AllTransactions)
                .ID("jqChart4")
                .Width(750)
                .Height(450)
                .Title("Funds")
                .Axes(axis =>
                {
                    axis.DateTimeAxis(Location.Bottom)
                        .Minimum(Model.AllTransactions.First().Date)
                        .Maximum(Model.AllTransactions.Last().Date)
                        .Interval(1)
                        .IntervalType(DateTimeIntervalType.Months);
                })
                .Series(series =>
                    {
                        series.Line().Title("Transactions")
                                       .XValues(el => el.Date)
                                       .YValues(el => el.Value2)
                                       .Markers(false)
                                       .LineWidth(2);
                        series.Line().Title("Funds")
                                       .XValues(el => el.Date)
                                       .YValues(el => el.Value1)
                                       .Markers(false)
                                       .LineWidth(2);
                    }
                )
                .Render() 
          )

<h4>Radar charts</h4>

<p>2011</p>

@(Html.JQChart()
                .Chart(Model.MonthlySpending2011)
                .ID("jqChart5")
                .Width(750)
                .Height(450)
                .Title("2011 Spending")
                .Series(series =>
                {
                        series.RadarLine().Title("Debit")
                                        .XValues(el => el.Label)
                                        .YValues(el => el.Value1)
                                        .LineWidth(5);
                        series.RadarLine().Title("Credit")
                                        .XValues(el => el.Label)
                                        .YValues(el => el.Value2)
                                        .LineWidth(5);
                    }
                )
                .Render() 
          )

<p>2012</p>

@(Html.JQChart()
                .Chart(Model.MonthlySpending2012)
                .ID("jqChart6")
                .Width(750)
                .Height(450)
                .Title("2012 Spending")
                .Series(series =>
                    {
                            series.RadarLine().Title("Debit")
                                            .XValues(el => el.Label)
                                            .YValues(el => el.Value1)
                                            .LineWidth(5);
                            series.RadarLine().Title("Credit")
                                            .XValues(el => el.Label)
                                            .YValues(el => el.Value2)
                                            .LineWidth(5);
                    }
                )
                .Render()
              )