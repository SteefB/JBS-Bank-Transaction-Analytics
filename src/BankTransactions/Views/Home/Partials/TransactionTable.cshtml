@using nl.jorncruijsen.jbs.transactions

@model IEnumerable<BankRecord>

@{int tableCounter = (int)(HttpContext.Current.Items["TableCounter"] = (HttpContext.Current.Items.Contains("TableCounter") ? ((int)HttpContext.Current.Items["TableCounter"])+1 : 0));}
           
@{int counter = 0;}

<table class="data" id="transactionTable_@(tableCounter)">
    <tr><th>Datum</th><th>Hoeveelheid</th><th>Tegenrekening</th><th>Beschrijving</th></tr>

    @foreach (BankRecord record in Model) {
        string type = record.Type.Equals(BankRecord.TransactionType.CREDIT) ? "gain" : "gone";

        string visibility = (counter++ > 5) ? "hide_row" : "";
            
        <tr class="@type @visibility">
            <td>@record.RequestDate.ToString("dd-MM-yyyy")</td>
            <td>@string.Format("{0:C}", record.Amount)</td>
            <td>@Html.RouteLink(record.Name, new { Controller = "Home", Action = "Details", Name = record.Name})</td>
            <td>@record.Description1</td>
        </tr>
    }

</table>

<div class="hide" id="transactionChart_@(tableCounter)">
    @Html.Partial("Partials/Chart", Model)
</div>

<div class="buttonBar">
    <p class="showMoreToggleButton" onclick="toggleVisibility('transactionTable_@(tableCounter)', this);">Show more...</p>

    <p class="showMoreToggleButton" onclick="showChart('transactionChart_@(tableCounter)', this);">Draw me a chart...</p>
</div>